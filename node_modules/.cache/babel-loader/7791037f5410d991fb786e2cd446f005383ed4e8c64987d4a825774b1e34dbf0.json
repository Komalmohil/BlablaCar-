{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komal\\\\OneDrive\\\\Desktop\\\\hostel\\\\src\\\\pages\\\\AllPgs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport useStore from \"../store/store\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Card from \"../components/card\";\nimport \"../styles/AllPgs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPgs = () => {\n  _s();\n  var _location$state;\n  const {\n    pgListings,\n    fetchPgListings\n  } = useStore();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const selectedCategory = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.category) || \"Girls\";\n  useEffect(() => {\n    fetchPgListings();\n  }, [fetchPgListings]);\n  const filteredPGs = pgListings.filter(pg => pg.category && pg.category.toLowerCase() === selectedCategory.toLowerCase());\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"allpgs-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"homepage-button\",\n      onClick: () => navigate(\"/\"),\n      children: \"\\u2190 Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category-title\",\n      children: [\"All \", selectedCategory, \" PGs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: filteredPGs.length > 0 ? filteredPGs.map((pg, index) => /*#__PURE__*/_jsxDEV(Card, {\n          pg: pg,\n          onClick: () => navigate(`/pg-details/${pg._id || index}`)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-pgs-text\",\n          children: [\"No \", selectedCategory.toLowerCase(), \" PGs available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPgs, \"1FpIkAkzr5VPbtmmiGyRZcp2Zuk=\", false, function () {\n  return [useStore, useNavigate, useLocation];\n});\n_c = AllPgs;\nexport default AllPgs;\n\n// // src/pages/AllPgs.jsx\n// import React, { useEffect } from \"react\";\n// // import useStore from \"../store/Pgstore\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// // import Card from \"../components/Card\";\n// //import \"./style/Pghomepage.css\"; \n\n// import useStore from \"../store/store\";\n\n// import Card from \"../components/card\";\n// import \"../styles/AllPgs.css\";\n\n// const AllPgs = () => {\n//   const { pgListings, fetchPgListings, isLoading, error } = useStore();\n//   const navigate = useNavigate();\n//   const location = useLocation();\n\n//   const selectedCategory = location.state?.category || \"All\";\n\n//   useEffect(() => {\n//     fetchPgListings();\n//   }, [fetchPgListings]);\n\n//   // Filter functions\n//   const girlsPG = pgListings.filter(pg => pg.type?.gender === \"Girls\");\n//   const boysPG = pgListings.filter(pg => pg.type?.gender === \"Boys\");\n//   const coedPG = pgListings.filter(pg => pg.type?.gender === \"Coed\");\n\n//   // Handle filtered view if a specific category is selected\n//   const sectionsToRender = selectedCategory === \"All\"\n//     ? [\n//         { title: \"Girls PG\", listings: girlsPG },\n//         { title: \"Boys PG\", listings: boysPG },\n//         { title: \"Coed PG\", listings: coedPG },\n//       ]\n//     : [\n//         {\n//           title: `${selectedCategory} PG`,\n//           listings: pgListings.filter(pg => pg.type?.gender === selectedCategory),\n//         },\n//       ];\n\n//   return (\n//     <main className=\"allpgs-main\">\n//       {/* <button className=\"homepage-button\" onClick={() => navigate(\"/\")}>\n//         ← Home\n//       </button> */}\n//       <h3 className=\"category-title\">\n//         {selectedCategory === \"All\"\n//           ? \"All PG Listings\"\n//           : `All ${selectedCategory} PGs`}\n//       </h3>\n\n//       {isLoading && <p className=\"loading-text\">Loading PGs...</p>}\n//       {error && <p className=\"error-text\">Error: {error}</p>}\n\n//       {!isLoading && !error &&\n//         sectionsToRender.map(({ title, listings }, i) => (\n//           <section key={i}>\n//             <h4 className=\"category-subtitle\">{title}</h4>\n//             <div className=\"card-container\">\n//               {listings.length > 0 ? (\n//                 listings.map(pg => (\n//                   <Card\n//                     key={pg._id}\n//                     pg={pg}\n//                     onClick={() => navigate(`/pg-details/${pg._id}`)}\n//                   />\n//                 ))\n//               ) : (\n//                 <p className=\"no-pgs-text\">No {title.toLowerCase()} available.</p>\n//               )}\n//             </div>\n//             <hr />\n//           </section>\n//         ))}\n//     </main>\n//   );\n// };\n\n// export default AllPgs;\nvar _c;\n$RefreshReg$(_c, \"AllPgs\");","map":{"version":3,"names":["React","useEffect","useStore","useLocation","useNavigate","Card","jsxDEV","_jsxDEV","AllPgs","_s","_location$state","pgListings","fetchPgListings","navigate","location","selectedCategory","state","category","filteredPGs","filter","pg","toLowerCase","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","_id","_c","$RefreshReg$"],"sources":["C:/Users/komal/OneDrive/Desktop/hostel/src/pages/AllPgs.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport useStore from \"../store/store\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Card from \"../components/card\";\r\nimport \"../styles/AllPgs.css\";\r\n\r\nconst AllPgs = () => {\r\n  const { pgListings, fetchPgListings } = useStore();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const selectedCategory = location.state?.category || \"Girls\";\r\n\r\n  useEffect(() => {\r\n    fetchPgListings();\r\n  }, [fetchPgListings]);\r\n\r\n  const filteredPGs = pgListings.filter(\r\n    (pg) => pg.category && pg.category.toLowerCase() === selectedCategory.toLowerCase()\r\n  );\r\n\r\n  return (\r\n    <main className=\"allpgs-main\">\r\n     <button className=\"homepage-button\" onClick={() => navigate(\"/\")}>\r\n        ← Home\r\n      </button>\r\n        <h3 className=\"category-title\">\r\n          All {selectedCategory} PGs\r\n        </h3>\r\n      <section> \r\n        <div className=\"card-container\">\r\n          {filteredPGs.length > 0 ? (\r\n            filteredPGs.map((pg, index) => (\r\n              <Card\r\n                key={index}\r\n                pg={pg}\r\n                onClick={() => navigate(`/pg-details/${pg._id || index}`)}\r\n              />\r\n            ))\r\n          ) : (\r\n            <p className=\"no-pgs-text\">\r\n              No {selectedCategory.toLowerCase()} PGs available.\r\n            </p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AllPgs;\r\n\r\n\r\n// // src/pages/AllPgs.jsx\r\n// import React, { useEffect } from \"react\";\r\n// // import useStore from \"../store/Pgstore\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// // import Card from \"../components/Card\";\r\n// //import \"./style/Pghomepage.css\"; \r\n\r\n// import useStore from \"../store/store\";\r\n\r\n// import Card from \"../components/card\";\r\n// import \"../styles/AllPgs.css\";\r\n\r\n// const AllPgs = () => {\r\n//   const { pgListings, fetchPgListings, isLoading, error } = useStore();\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n\r\n//   const selectedCategory = location.state?.category || \"All\";\r\n\r\n//   useEffect(() => {\r\n//     fetchPgListings();\r\n//   }, [fetchPgListings]);\r\n\r\n//   // Filter functions\r\n//   const girlsPG = pgListings.filter(pg => pg.type?.gender === \"Girls\");\r\n//   const boysPG = pgListings.filter(pg => pg.type?.gender === \"Boys\");\r\n//   const coedPG = pgListings.filter(pg => pg.type?.gender === \"Coed\");\r\n\r\n//   // Handle filtered view if a specific category is selected\r\n//   const sectionsToRender = selectedCategory === \"All\"\r\n//     ? [\r\n//         { title: \"Girls PG\", listings: girlsPG },\r\n//         { title: \"Boys PG\", listings: boysPG },\r\n//         { title: \"Coed PG\", listings: coedPG },\r\n//       ]\r\n//     : [\r\n//         {\r\n//           title: `${selectedCategory} PG`,\r\n//           listings: pgListings.filter(pg => pg.type?.gender === selectedCategory),\r\n//         },\r\n//       ];\r\n\r\n//   return (\r\n//     <main className=\"allpgs-main\">\r\n//       {/* <button className=\"homepage-button\" onClick={() => navigate(\"/\")}>\r\n//         ← Home\r\n//       </button> */}\r\n//       <h3 className=\"category-title\">\r\n//         {selectedCategory === \"All\"\r\n//           ? \"All PG Listings\"\r\n//           : `All ${selectedCategory} PGs`}\r\n//       </h3>\r\n\r\n//       {isLoading && <p className=\"loading-text\">Loading PGs...</p>}\r\n//       {error && <p className=\"error-text\">Error: {error}</p>}\r\n\r\n//       {!isLoading && !error &&\r\n//         sectionsToRender.map(({ title, listings }, i) => (\r\n//           <section key={i}>\r\n//             <h4 className=\"category-subtitle\">{title}</h4>\r\n//             <div className=\"card-container\">\r\n//               {listings.length > 0 ? (\r\n//                 listings.map(pg => (\r\n//                   <Card\r\n//                     key={pg._id}\r\n//                     pg={pg}\r\n//                     onClick={() => navigate(`/pg-details/${pg._id}`)}\r\n//                   />\r\n//                 ))\r\n//               ) : (\r\n//                 <p className=\"no-pgs-text\">No {title.toLowerCase()} available.</p>\r\n//               )}\r\n//             </div>\r\n//             <hr />\r\n//           </section>\r\n//         ))}\r\n//     </main>\r\n//   );\r\n// };\r\n\r\n// export default AllPgs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}