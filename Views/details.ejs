<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Ride Booking</title>
  <link rel="stylesheet" href="/css/bookingstyle.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css"/>
  <style>
    #map { height: 300px; margin: 1em 0; }
  </style>
</head>
<body>
  <%- include('partials/header.ejs') %>

  <main>
    <div class="container" id="detaildiv">
      <h2><%= ride.date %></h2>
      <div class="details" id="locdest">
        <h3>From: <%= ride.location %></h3>
        <p>Pickup: <%= ride.pickup.point %></p>
        <p>At: <%=ride.pickupTime%></p>
        <h3>To: <%= ride.destination %></h3>
        <p>Drop-off: <%= ride.dropoff.point %></p>
      </div>
      <div class="details" id="noCost">
        <p><%= ride.seats %> passenger</p>
        <p>Price: â‚¹<%= ride.price %></p>
        <a href="/inbox/<%= ride._id %>/<%= ride.publisher._id %>/<%= userId %>">Chat with Driver</a>
        </div>
      
      <div id="map"></div> 

      <form action="/book-ride/<%= ride._id %>" method="GET">
  <button type="submit" class="btn btn-primary">Request to Book Ride</button>
</form>
    </div>
  </main>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
  <script>

document.addEventListener("DOMContentLoaded",function(){
  const pickupLat = "<%=ride.pickup.lat %>";
  const pickupLng= "<%=ride.pickup.lng %>";
  const dropoffLat="<%=ride.dropoff.lat %>";
  const dropoffLng = "<%= ride.dropoff.lng %>";
  const selectedRouteIndex="<%= ride.routeIndex %>"; 
    
    const map = L.map('map').setView([pickupLat, pickupLng], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy;BlaBlaCar'
    }).addTo(map);
   
   L.marker([pickupLat, pickupLng],{draggable:false}).addTo(map).bindPopup("Pickup Point");
   L.marker([dropoffLat, dropoffLng],{draggable:false }).addTo(map).bindPopup("Drop-off Point");
  
   const routingControl = L.Routing.control({
  waypoints: [
    L.latLng(pickupLat, pickupLng),
    L.latLng(dropoffLat, dropoffLng)
  ],
  routeWhileDragging: false,
  show: false,
  draggableWaypoints: false,
  addWaypoints: false,
  createMarker: () => null
}).addTo(map);

routingControl.on('routesfound', function (e) {
  const routes = e.routes;
  console.log("Available Routes:", routes);
  console.log("Stored Route Index:", selectedRouteIndex);

  if(selectedRouteIndex>= 0 && selectedRouteIndex < routes.length) {
    const selectedRoute =routes[selectedRouteIndex];
    const coords= selectedRoute.coordinates;

    if(coords&&coords.length>0) {
      const polyline = L.polyline(coords, {color:'blue'}).addTo(map);
      map.fitBounds(polyline.getBounds());
    } else { console.log("Selected route has no coordinates.");}
  }

  routingControl.remove(); 
});
})
  </script>
</body>
</html>
